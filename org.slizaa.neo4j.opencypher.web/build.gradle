plugins { id "war" }

repositories {
	mavenLocal()
	mavenCentral()
}

dependencies {
	compile project(":org.slizaa.neo4j.opencypher")
	compile project(":org.slizaa.neo4j.opencypher.ide")

	compile(group: "ingraph", name: "driver", version: "0.4.0-SNAPSHOT") {
		exclude group: "org.glassfish.jersey.core"
		exclude group: "org.glassfish.jersey.bundles.repackaged"
		exclude group: "org.glassfish.hk2"
		exclude group: "org.glassfish.hk2.external"
		exclude group: "org.glassfish.jersey.media"
		exclude group: "org.glassfish.jersey.containers"
	}
	compile group: "com.google.code.gson", name: "gson", version: "2.8.2"

	compile "org.eclipse.xtext:org.eclipse.xtext.xbase.web:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.web.servlet:${xtextVersion}"
	compile "org.eclipse.xtend:org.eclipse.xtend.lib:${xtextVersion}"
	compile "org.webjars:requirejs:2.2.0"
	compile "org.webjars:bootstrap:4.0.0"
	compile "org.webjars:jquery:3.3.1"
	compile "org.webjars:ace:1.2.2"

	providedCompile "org.eclipse.jetty:jetty-annotations:9.3.8.v20160314"
	providedCompile "org.slf4j:slf4j-simple:1.7.21"
}

task jettyRun(type:JavaExec) {
	dependsOn(sourceSets.main.runtimeClasspath)
	classpath = sourceSets.main.runtimeClasspath.filter{it.exists()}
	main = "org.slizaa.neo4j.opencypher.web.ServerLauncher"
	standardInput = System.in
	group = "run"
}
